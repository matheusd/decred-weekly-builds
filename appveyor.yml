version: 0.1.{build}

skip_non_tags: true

cache:
  - node_modules
  - app\node_modules
  - '%APPDATA%\npm-cache'
  - '%USERPROFILE%\.electron'

platform:
  - x64

init:
  - git config --global core.autocrlf input
#  - set PATH=%GOROOT%\bin;%HOME%\bin;%PATH%

install:
  - ps: Install-Product node 6 x64
  - git reset --hard HEAD
  - npm install npm -g
  - go version
  - go env
  - mkdir %ROOT_BUILD%\src
  - python before_install.py
  - dir %ROOT_BUILD%\src
  - mkdir %ROOT_BUILD%\src\decrediton\bin
  - cd %ROOT_BUILD%\src\dcrd
  - go build -v -o ..\decrediton\bin\dcrd.exe .
  - go build -v -o ..\decrediton\bin\dcrctl.exe .\cmd\dcrctl
  - cd ..\dcrwallet
  - go build -v -o ..\decrediton\bin\dcrwallet.exe .
  - cd ..\decrediton
  - yarn
  - yarn package
  - dir %ROOT_BUILD%\src\decrediton\release\
  - mkdir %APPVEYOR_BUILD_FOLDER%\artifacts
  - copy %ROOT_BUILD%\src\decrediton\release\*.exe %APPVEYOR_BUILD_FOLDER%\artifacts
  - 7z a %APPVEYOR_BUILD_FOLDER%\artifacts\decrediton-win-%APPVEYOR_REPO_TAG_NAME%.zip %ROOT_BUILD%\src\decrediton\release\win-unpacked\*

build_script:
  - echo "Hooray!"

test: off

environment:
  ROOT_BUILD: c:\home
  GOPATH: c:\gopath
  GOROOT: C:\go

artifacts:
  - path: '.\artifacts\*.exe'
    type: File
    name: DecreditonRelease
  - path: '.\artifacts\*.zip'
    type: File
    name: DecreditonUnpacked


deploy:
  provider: GitHub
  auth_token: '%GITHUB_OAUTH_TOKEN%'
  artifact: DecreditonRelease,DecreditonUnpacked
  draft: false
  prerelease: false
  on:
    branch: master                 # release from master branch only
    appveyor_repo_tag: true        # deploy on tag push only
